#include "efficiency.h"

double eventEff_HighPT(double rMax, double sumPT)
{
	double eff[3][20] =
	{
		{0., 1.0, 1.0149, 0.94722, 0.94352, 0.9595, 0.96917, 0.97964, 0.98328, 0.98756, 0.991, 0.99253, 0.99437, 0.9953, 0.99591, 0.9966, 0.99687, 0.99734, 0.99742, 0.99787},
		{0., 0., 0.54054, 0.61961, 0.65062, 0.71785, 0.76471, 0.80915, 0.83554, 0.85291, 0.87058, 0.88212, 0.89615, 0.90682, 0.91549, 0.92492, 0.92963, 0.93245, 0.93579, 0.93706},
		{0., 0., 0., 0.9375, 0.86878, 0.86608, 0.89899, 0.90846, 0.92904, 0.94101, 0.95568, 0.95513, 0.96809, 0.97059, 0.97361, 0.97938, 0.98014, 0.98293, 0.98997, 0.98891}
	};
	int rRegion = -1;
	if ((rMax > 0.) && (rMax <= 1150.))
		rRegion = 0;
	if ((rMax > 1150.) && (rMax <= 3870.))
		rRegion = 1;
	if (rMax > 3870.)
		rRegion = 2;
	int sumPTRegion = int((sumPT - 1000.) / 200.);
	if ((rRegion >= 0) && (rRegion < 3) && (sumPTRegion >= 0) && (sumPTRegion < 20))
		return eff[rRegion][sumPTRegion];
	return 0.;
}

double eventEff_Trackless(double rMax, double sumPT)
{
	double eff[3][13] =
	{
		{0., 0., 0., 1.1851, 0.90064, 0.8282, 0.76075, 0.65516, 0.50438, 0.36477, 0.26044, 0.18527, 0.076167},
		{0., 0., 0., 0.10582, 0.11052, 0.14174, 0.20843, 0.26343, 0.31029, 0.32515, 0.34243, 0.33272, 0.27639},
		{0., 0., 0., 0., 0.15385, 0.19178, 0.27619, 0.2328, 0.26744, 0.26979, 0.23022, 0.2277, 0.28171}
	};
	int rRegion = -1;
	if ((rMax > 0.) && (rMax <= 1150.))
		rRegion = 0;
	if ((rMax > 1150.) && (rMax <= 3870.))
		rRegion = 1;
	if (rMax > 3870.)
		rRegion = 2;
	int sumPTRegion = int(sumPT / 200.);
	if ((rRegion >= 0) && (rRegion < 3) && (sumPTRegion >= 0) && (sumPTRegion < 13))
		return eff[rRegion][sumPTRegion];
	return 0.;
}

double vertexEff(double rVertex, double massDV, int nTrack)
{
	double eff[12][8][8] =
	{
	{
		{0.015873, 0.063291, 0.079949, 0.078234, 0.050893, 0.061224, 0., 0.},
		{0.022222, 0.065728, 0.18539, 0.27481, 0.2532, 0.18093, 0., 0.},
		{0.020408, 0.060729, 0.2646, 0.42329, 0.45715, 0.4138, 0.32178, 0.},
		{0., 0.125, 0.35698, 0.52593, 0.55008, 0.50032, 0.37582, 0.},
		{0., 0.16667, 0.3072, 0.62752, 0.77724, 0.82406, 0.82758, 0.80263},
		{0., 0., 0.375, 0.68931, 0.80996, 0.8601, 0.85922, 0.85174},
		{0., 0., 0.46154, 0.69243, 0.83316, 0.91124, 0.93997, 0.94249},
		{0., 0., 0., 0.6443, 0.78013, 0.89477, 0.94148, 0.94257}
	},
	{
		{0., 0., 0.0625, 0.040153, 0.030303, 0.083333, 0., 0.},
		{0., 0., 0.14045, 0.14139, 0.12543, 0.13115, 0., 0.},
		{0., 0.15, 0.11661, 0.21523, 0.22709, 0.21862, 0.2, 0.},
		{0., 0., 0.18852, 0.24229, 0.25866, 0.24951, 0.2069, 0.},
		{0., 0., 0.15385, 0.26509, 0.32217, 0.35079, 0.35017, 0.33333},
		{0., 0., 0.21053, 0.27251, 0.31123, 0.35804, 0.36491, 0.40086},
		{0., 0., 0., 0.26733, 0.30869, 0.33614, 0.362, 0.35808},
		{0., 0., 0., 0., 0.29064, 0.33745, 0.34545, 0.35115}
	},
	{
		{0., 0.060606, 0.073913, 0.063764, 0.033333, 0., 0., 0.},
		{0., 0.071429, 0.11823, 0.20019, 0.20113, 0.17123, 0., 0.},
		{0., 0.027027, 0.18414, 0.28974, 0.32749, 0.31099, 0.175, 0.},
		{0., 0., 0.25503, 0.3594, 0.40532, 0.38541, 0.34667, 0.},
		{0., 0., 0.085714, 0.32157, 0.47495, 0.5403, 0.56038, 0.53846},
		{0., 0., 0.26316, 0.35992, 0.47874, 0.54397, 0.57631, 0.59441},
		{0., 0., 0., 0.37719, 0.42164, 0.50416, 0.54844, 0.56834},
		{0., 0., 0., 0., 0.41909, 0.44754, 0.51002, 0.53034}
	},
	{
		{0., 0., 0., 0.0023585, 0., 0., 0., 0.},
		{0., 0., 0.013793, 0.028585, 0.022488, 0.01049, 0., 0.},
		{0., 0., 0.018425, 0.036105, 0.035804, 0.034737, 0.023256, 0.},
		{0., 0., 0.023256, 0.038358, 0.04527, 0.041181, 0.034568, 0.},
		{0., 0., 0.036364, 0.041314, 0.053768, 0.062252, 0.065861, 0.074074},
		{0., 0., 0.052632, 0.030973, 0.048032, 0.066754, 0.067132, 0.059829},
		{0., 0., 0., 0.069565, 0.049637, 0.057856, 0.064442, 0.071842},
		{0., 0., 0., 0.090909, 0.042929, 0.047717, 0.058611, 0.064863}
	},
	{
		{0., 0.025641, 0.055921, 0.049554, 0.033803, 0.045455, 0., 0.},
		{0., 0.1, 0.091228, 0.15183, 0.13947, 0.076555, 0., 0.},
		{0., 0., 0.13274, 0.2297, 0.23316, 0.19323, 0.14815, 0.},
		{0., 0., 0.13472, 0.25774, 0.27985, 0.26791, 0.23032, 0.},
		{0., 0., 0.08, 0.20411, 0.31044, 0.38219, 0.41112, 0.29412},
		{0., 0., 0.15152, 0.22639, 0.31909, 0.38443, 0.4238, 0.48943},
		{0., 0., 0., 0.22561, 0.26893, 0.33561, 0.40076, 0.43006},
		{0., 0., 0., 0., 0.18321, 0.25884, 0.34072, 0.39097}
	},
	{
		{0.037037, 0.060241, 0.039241, 0.039216, 0.020045, 0.013889, 0., 0.},
		{0., 0.055556, 0.09726, 0.13365, 0.10954, 0.082474, 0., 0.},
		{0., 0.1125, 0.14272, 0.19202, 0.20503, 0.18598, 0.12879, 0.},
		{0., 0.16667, 0.13265, 0.21118, 0.24027, 0.22719, 0.17114, 0.},
		{0., 0.076923, 0.052632, 0.1715, 0.25441, 0.30472, 0.32798, 0.30952},
		{0., 0., 0.10526, 0.17547, 0.24899, 0.30696, 0.33887, 0.38539},
		{0., 0., 0., 0.13824, 0.1954, 0.26739, 0.32154, 0.3489},
		{0., 0., 0., 0.20588, 0.16484, 0.20131, 0.26921, 0.31566}
	},
	{
		{0., 0.10714, 0.092105, 0.070588, 0.028674, 0., 0., 0.},
		{0., 0.055556, 0.20465, 0.25681, 0.19715, 0.11236, 0., 0.},
		{0., 0.21053, 0.29781, 0.39653, 0.41128, 0.35291, 0.21154, 0.},
		{0., 0., 0.25871, 0.5078, 0.52432, 0.47249, 0.31532, 0.},
		{0., 0., 0.21875, 0.40041, 0.58509, 0.70777, 0.77966, 0.5},
		{0., 0., 0.125, 0.40347, 0.58553, 0.70373, 0.79714, 0.86111},
		{0., 0., 0., 0.23077, 0.433, 0.60005, 0.75088, 0.85349},
		{0., 0., 0., 0., 0.26667, 0.41929, 0.59731, 0.73089}
	},
	{
		{0., 0., 0.0092379, 0.0077821, 0.0017182, 0., 0., 0.},
		{0., 0.042553, 0.026829, 0.03365, 0.020489, 0.0057307, 0., 0.},
		{0., 0.025, 0.035398, 0.068328, 0.066258, 0.041622, 0.013514, 0.},
		{0., 0., 0.042373, 0.092836, 0.090308, 0.07723, 0.049628, 0.},
		{0., 0., 0.031746, 0.066376, 0.11974, 0.15623, 0.17497, 0.074074},
		{0., 0., 0., 0.083333, 0.11177, 0.15829, 0.1884, 0.16895},
		{0., 0., 0., 0.041667, 0.076426, 0.12998, 0.17434, 0.21464},
		{0., 0., 0., 0., 0.052632, 0.089747, 0.1306, 0.16601}
	},
	{
		{0., 0., 0.023256, 0.011338, 0., 0., 0., 0.},
		{0., 0., 0.0096154, 0.045526, 0.026829, 0.036145, 0., 0.},
		{0., 0.090909, 0.092199, 0.10293, 0.0913, 0.064182, 0., 0.},
		{0., 0., 0.070423, 0.1275, 0.13761, 0.10293, 0.048544, 0.},
		{0., 0., 0., 0.12891, 0.18984, 0.26644, 0.26638, 0.16667},
		{0., 0., 0., 0.16017, 0.22099, 0.27028, 0.32418, 0.30328},
		{0., 0., 0., 0.034483, 0.10067, 0.23169, 0.3163, 0.35834},
		{0., 0., 0., 0., 0.082569, 0.1275, 0.21205, 0.26664}
	},
	{
		{0., 0.027778, 0.0065574, 0.0054299, 0., 0., 0., 0.},
		{0., 0., 0.017361, 0.12477, 0.0030181, 0.0046083, 0., 0.},
		{0., 0.083333, 0.011461, 0.016271, 0.015251, 0.0091583, 0., 0.},
		{0., 0., 0.0075188, 0.020424, 0.020142, 0.016858, 0., 0.},
		{0., 0., 0.032258, 0.010274, 0.028571, 0.036686, 0.038895, 0.},
		{0., 0., 0., 0.016514, 0.024166, 0.034015, 0.039893, 0.062937},
		{0., 0., 0., 0.015038, 0.017159, 0.031346, 0.043334, 0.052299},
		{0., 0., 0., 0., 0.0080645, 0.0194, 0.035159, 0.053098}
	},
	{
		{0., 0.027027, 0.02514, 0.021853, 0., 0., 0., 0.},
		{0., 0., 0.045936, 0.061547, 0.039199, 0.011494, 0., 0.},
		{0., 0.052632, 0.11227, 0.125, 0.11332, 0.06672, 0., 0.},
		{0., 0., 0.089286, 0.14519, 0.15371, 0.12006, 0.046414, 0.},
		{0., 0., 0., 0.098662, 0.19736, 0.24224, 0.24869, 0.052632},
		{0., 0., 0., 0.12576, 0.1836, 0.25323, 0.293, 0.33531},
		{0., 0., 0., 0.081871, 0.15927, 0.25065, 0.35736, 0.45622},
		{0., 0., 0., 0., 0.090164, 0.18924, 0.29433, 0.41828}
	},
	{
		{0., 0., 0.0060241, 0.0029437, 0., 0., 0., 0.},
		{0., 0.018519, 0.0064103, 0.0067435, 0.0038927, 0., 0., 0.},
		{0., 0., 0.0084337, 0.012461, 0.010559, 0.0067517, 0., 0.},
		{0., 0., 0.011527, 0.015924, 0.013498, 0.0083898, 0.0041494, 0.},
		{0., 0., 0., 0.016253, 0.03036, 0.030371, 0.024006, 0.038462},
		{0., 0., 0., 0.02754, 0.035642, 0.038382, 0.036099, 0.031343},
		{0., 0., 0., 0.028269, 0.036145, 0.051685, 0.074166, 0.093914},
		{0., 0., 0., 0.060606, 0.026667, 0.044386, 0.068624, 0.10614}
	}
	};
	int rRegion = -1;
	if ((rVertex > 4.) && (rVertex <= 22.))
		rRegion = 0;
	if ((rVertex > 22.) && (rVertex <= 25.))
		rRegion = 1;
	if ((rVertex > 25.) && (rVertex <= 29.))
		rRegion = 2;
	if ((rVertex > 29.) && (rVertex <= 38.))
		rRegion = 3;
	if ((rVertex > 38.) && (rVertex <= 46.))
		rRegion = 4;
	if ((rVertex > 46.) && (rVertex <= 73.))
		rRegion = 5;
	if ((rVertex > 73.) && (rVertex <= 84.))
		rRegion = 6;
	if ((rVertex > 84.) && (rVertex <= 111.))
		rRegion = 7;
	if ((rVertex > 111.) && (rVertex <= 120.))
		rRegion = 8;
	if ((rVertex > 120.) && (rVertex <= 145.))
		rRegion = 9;
	if ((rVertex > 145.) && (rVertex <= 180.))
		rRegion = 10;
	if ((rVertex > 180.) && (rVertex <= 300.))
		rRegion = 11;
	int massRegion = -1;
	if ((massDV > 10.) && (massDV <= 15.))
		massRegion = 0;
	if ((massDV > 15.) && (massDV <= 20.))
		massRegion = 1;
	if ((massDV > 20.) && (massDV <= 30.))
		massRegion = 2;
	if ((massDV > 30.) && (massDV <= 50.))
		massRegion = 3;
	if ((massDV > 50.) && (massDV <= 100.))
		massRegion = 4;
	if ((massDV > 100.) && (massDV <= 200.))
		massRegion = 5;
	if ((massDV > 200.) && (massDV <= 500.))
		massRegion = 6;
	if ((massDV > 500.) && (massDV <= 5000.))
		massRegion = 7;
	int trackRegion = -1;
	if ((nTrack >= 5) && (nTrack <= 6))
		trackRegion = 0;
	if ((nTrack > 6) && (nTrack <= 7))
		trackRegion = 1;
	if ((nTrack > 7) && (nTrack <= 10))
		trackRegion = 2;
	if ((nTrack > 10) && (nTrack <= 15))
		trackRegion = 3;
	if ((nTrack > 15) && (nTrack <= 20))
		trackRegion = 4;
	if ((nTrack > 20) && (nTrack <= 30))
		trackRegion = 5;
	if ((nTrack > 30) && (nTrack <= 50))
		trackRegion = 6;
	if ((nTrack > 50) && (nTrack <= 200))
		trackRegion = 7;
	if ((rRegion >= 0) && (rRegion < 12) && (massRegion >= 0) && (massRegion < 8) && (trackRegion >= 0) && (trackRegion < 8))
		return eff[rRegion][massRegion][trackRegion];
	return 0.;
}
